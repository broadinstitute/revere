name: Bump, Tag, and Publish
# The purpose of the workflow is to:
#  1. Bump the version number and tag the release if not a PR
#  2. Build docker image and publish to GCR
#
# When run on merge to main, it tags and bumps the patch version by default. You can
# bump other parts of the version by putting #major, #minor, or #patch in your commit
# message.
#
# When run on a PR, it simulates bumping the tag and appends a hash to the pushed image.
#
# When run on a hotfix branch, it tags and generates the hotfix version
#
# When run manually, you can specify the part of the semantic version to bump
#
# The workflow relies on github secrets:
# - GCP_PUBLISH_EMAIL - SA email for publishing to dsp-artifact-registry
# - GCP_PUBLISH_KEY_B64 - SA key (Base64-encoded JSON string) for publishing to dsp-artifact-registry
# - BROADBOT_TOKEN - the broadbot token, so we can avoid two reviewer rule on GHA operations
on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
  workflow_dispatch:
    inputs:
      bump:
        description: 'Part of the version to bump: major, minor, patch'
        required: false
        default: 'minor'
      branch:
        description: 'Branch to run the workflow on'
        required: false
        default: 'main'
env:
  GOOGLE_PROJECT: dsp-artifact-registry
  # Name of the app-specific Docker repository configured in GOOGLE_PROJECT
  REPOSITORY_NAME: ${{ github.event.repository.name }}
  # Name of the image to make in REPOSITORY_NAME
  IMAGE_NAME: ${{ github.event.repository.name }}
  # Region-specific Google Docker repository where GOOGLE_PROJECT/REPOSITORY_NAME can be found
  GOOGLE_DOCKER_REPOSITORY: us-central1-docker.pkg.dev
jobs:
  tag-publish-job:
    runs-on: ubuntu-latest
    steps:
      - name: Set part of semantic version to bump
        id: semver
        run: |
          SEMVER_PART=""
          CHECKOUT_BRANCH="$GITHUB_REF"
          if ${{github.event_name == 'push' }}; then
            SEMVER_PART="patch"
          elif ${{github.event_name == 'workflow_dispatch' }}; then
            SEMVER_PART=${{ github.event.inputs.bump }}
            CHECKOUT_BRANCH=${{ github.event.inputs.branch }}
          fi
          echo ::set-output name=semver-part::$SEMVER_PART
          echo ::set-output name=checkout-branch::$CHECKOUT_BRANCH

      - name: Checkout current code
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.semver.outputs.checkout-branch }}
          token: ${{ secrets.BROADBOT_TOKEN }}

      - name: Bump the tag to a new version
        uses: databiosphere/github-actions/actions/bumper@bumper-0.0.3
        id: tag
        env:
          DEFAULT_BUMP: patch
          GITHUB_TOKEN: ${{ secrets.BROADBOT_TOKEN }}
          HOTFIX_BRANCHES: hotfix.*
          OVERRIDE_BUMP: ${{ steps.semver.outputs.semver-part }}
          RELEASE_BRANCHES: main

      - name: Auth to GCP
        uses: google-github-actions/setup-gcloud@master
        with:
          version: '345.0.0'
          service_account_email: ${{ secrets.GCP_PUBLISH_EMAIL }}
          service_account_key: ${{ secrets.GCP_PUBLISH_KEY_B64 }}

      - name: Explicitly auth Docker for Artifact Registry
        run: gcloud auth configure-docker $GOOGLE_DOCKER_REPOSITORY --quiet

      - name: Construct docker image name and tag
        id: image-name
        run: |
          DOCKER_TAG=${{ steps.tag.outputs.tag }}
          echo ::set-output name=name::${GOOGLE_DOCKER_REPOSITORY}/${GOOGLE_PROJECT}/${REPOSITORY_NAME}/${IMAGE_NAME}:${DOCKER_TAG}

      - name: Build image
        run: "docker build -t ${{ steps.image-name.outputs.name }} ."

      - name: Run Trivy vulnerability scanner
        # From https://github.com/broadinstitute/dsp-appsec-trivy-action
        uses: broadinstitute/dsp-appsec-trivy-action@v1
        with:
          image: ${{ steps.image-name.outputs.name }}

      - name: Push image
        run: "docker push ${{ steps.image-name.outputs.name }}"
